auto <- read.csv("../data/tema1/auto-mpg.csv", header = TRUE, sep = ",")
View(auto)
names(auto)
auto_no_header <- read.csv("../data/tema1/auto-mpg-noheader.csv", header = FALSE)
View(auto_no_header)
names(auto_no_header)
# Ver las primeras líneas de un datafram
head()
# Ver las primeras líneas de un datafram
head(auto_no_header)
# Ejemplo del error de cargar un fichero sin cabecera con header = TRUE (valor por
# defecto de header)
auto_no_sense <- read.csv("../data/tema1/auto-mpg-noheader.csv")
View(auto_no_sense)
head(auto_no_sense)
head(auto_no_sense, 4)
# Ejemplo de uso de cabeceras personalizadas
# Nota c() se usa para crear un array de datos
auto_custom_headers = read.csv("../data/tema1/auto-mpg-noheader.csv", header = FALSE,
col.names = c("numero", "millas_por_galeon", "cilindrada",
"desplazamiento", "caballos_de_potencia",
"peso", "aceleracion", "año", "modelo"))
head(auto_custom_headers, 2)
who_form_internet <- read.csv("https://frogrames.es/course-contents/r/intro/tema1/WHO.csv")
who_form_internet <- read.csv("http://frogames.es/course-contents/r/intro/tema1/WHO.csv")
head (who_form_internet, 4)
View(who_form_internet)
install.packages("XML")
# Cargar la librería de XML
library(XML)
version
install.packages("installr")
require("installr")
updateR()
version
# Cargar la librería de XML
library(XML)
install.packages(c("BH", "forcats", "haven", "hms", "Rcpp", "rlang", "tibble", "XML"))
install.packages(c("BH", "forcats", "haven", "hms", "Rcpp", "rlang", "tibble", "XML"))
url <- "../data/tema1/cd_catalog.xml"
url <- "../data/tema1/cd_catalog.xml"
xmldoc <- xmlParse(url)
# Cargar la librería de XML
library(XML)
url <- "../data/tema1/cd_catalog.xml"
View(auto)
xmldoc <- xmlParse(url)
rootNode <- xmlRoot(xmldoc)
rootNode[1]
cds_data <- xmlSApply(rootNode, function(x) xmlSApply(x, xmlValue))
# Tenemos que hacer una transposición de los datos
cds.catalog <- data.frame(t(cds_data), row.names = NULL)
View(cds.catalog)
head(cds.catalog, 2)
cds.catalog[1:5,]
population_url <- "../data/tema1/WorldPopulation-wiki.htm"
tables <- readHTMLTable(population_url)
tables[[6]]
most_populated <- tables[[6]]
head(most_populated, 3)
custom_table <- readHTMLTable(population_url, which = 6)
install.packages("jsonlite")
library(jsonlite)
dat.1 <- fromJSON("../data/tema1/students.json")
View(dat.1)
dat.2 <- fromJSON("../data/tema1/student-courses.json")
View(dat.2)
url <- "https://finance.yahoo.com/webservice/v1/symbols/allcurrencies/quote?format=json"
currencies <- fromJSON(url)
install.packages("curl")
library(curl)
currencies <- fromJSON(url)
View(currencies)
currency.data <- currencies$list$resources$resource$fields
View(currency.data)
head(dat.1, 3)
dat.1$Email
currency.data[1:$,]
currency.data[1:5, 1:2]
dat.1[c(2,5,8),]
dat.1[, c(2,5)]
students_data <- read.fwf("../data/tema1/student-fwf.txt",
widths = c(4, 15, 20, 15, 4),
col.names = c("id", "nombre", "email", "carrera", "año"))
View(students_data)
students_data_header <- read.fwf("../data/tema1/student-fwf-header.txt",
widths = c(4, 15, 20, 15, 4))
students_data_header <- read.fwf("../data/tema1/student-fwf-header.txt",
widths = c(4, 15, 20, 15, 4), header = TRUE, sep = "\t")
students_data_header <- read.fwf("../data/tema1/student-fwf-header.txt",
widths = c(4, 15, 20, 15, 4), header = TRUE,
sep = "\t", skip = 2)
View(students_data_header)
students_data_no_email <- read.fwf("../data/tema1/student-fwf.txt",
widths = c(4, 15, -20, 15, 4),
col.names = c("id", "nombre", "carrera", "año"))
View(students_data_no_email)
clientes <- c("Juan Gabriel", "Ricardo", "Pedro")
fechas <- as.Date(c("2017-12-27", "2017-11-1", "2018-1-1"))
pedidos <- data.frame(clientes, fechas, pago)
pago <- c(315, 192.55, 40.15)
# Si queremos guardar el dataframe en un fichero
save(pedidos, file="../data/tema1/ejemploPedidos.Rdata")
# Creamos un dataframe con los objetos que hemos creado antes
pedidos <- data.frame(clientes, fechas, pago)
# Si queremos guardar el dataframe en un fichero
save(pedidos, file="../data/tema1/ejemploPedidos.Rdata")
saveRDS(pedidos, file="../data/tema1/ejemploPedidos.rds")
clientes_Vip <- c("Juan Gabriel", "Ricardo")
# Si queremos guardar el dataframe en un fichero
save(pedidos, clientes_Vip, file="../data/tema1/ejemploPedidos.Rdata")
# Si queremos cargar un fichero Rdata
load("../data/tema1/ejemploPedidos.Rdata")
# Si queremos cargar un fichero Rdata
load("../data/tema1/ejemploPedidos.Rdata")
View(pedidos)
# Si queremos cargar un fichero Rdata
load("../data/tema1/ejemploPedidos.Rdata")
# Si queremos recuperar
orders <- readRDS("../data/tema1/ejemploPedidos.rds")
View(pedidos)
View(orders)
# cargar datsets que están en la librería de R
data(iris)
data(cars)
# cargar datsets que están en la librería de R
data(iris)
View(iris)
view(cars)
View(cars)
primes <- c(2, 3 , 5, 7, 11, 13)
pow2 <- c(2,4,8,16,32,64,128)
save(list = c("primes", "pow2"), file="../data/tema1/ejmplo_prime_and_pow2.Rdata")
# Se notifica si existe la variable al cargarla
attach("../data/tema1/ejmplo_prime_and_pow2.Rdata")
# Para obtener información de los datasets que tenemos disponibles
data()
